cmake_minimum_required(VERSION 3.26)

# NOTE : It works on my windows environment, do not knwo whether it also works on other platform
set (project_name RcNodeEditor)
project(${project_name})

# official doc suggest that we should compile imgui's source code with ourown projects 
# rather than make imgui a library
set (imgui_src_path "./3rdParts/imgui/source")
set (imgui_inc_path "./3rdParts/imgui/include")
# imnode source and include
set (imnode_src_path "./3rdParts/imnode/source")
set (imnode_inc_path "./3rdParts/imnode/include")
# our own project's sources and includes
set (our_own_src_path "./RcNodeEditor/source")
set (our_own_inc_path "./RcNodeEditor/include")

aux_source_directory(${imgui_src_path} project_srcfiles)
aux_source_directory(${imnode_src_path} project_srcfiles)
aux_source_directory(${our_own_src_path} project_srcfiles)

# we need sdl2 lib, include subdirectory
add_subdirectory(./3rdParts/SDL2/ EXCLUDE_FROM_ALL)

# make executable
add_executable(${project_name} ${project_srcfiles})
# use cpp20standard
target_compile_features(${project_name} PUBLIC cxx_std_20)
# include directories
target_include_directories(${project_name} PRIVATE ${imgui_inc_path} ${our_own_inc_path} ${imnode_inc_path})

if(TARGET SDL2::SDL2main)
    # It has an implicit dependency on SDL2 functions, so it MUST be added before SDL2::SDL2 (or SDL2::SDL2-static)
    target_link_libraries(${project_name} PRIVATE SDL2::SDL2main)
endif()

# link to  sdl2 lib
target_link_libraries(${project_name} PRIVATE SDL2::SDL2)

# find opengllib and link to to it
find_package(OpenGL REQUIRED)
target_link_libraries(${project_name} PRIVATE ${OPENGL_LIBRARIES})
message("opengl lib ${OPENGL_gl_LIBRARY}")

# link spdlog lib
add_subdirectory(./3rdParts/spdlog/ EXCLUDE_FROM_ALL)
target_link_libraries(${project_name} PRIVATE spdlog::spdlog)

# link yaml cpp
add_subdirectory(./3rdParts/yaml-cpp/ EXCLUDE_FROM_ALL)
target_link_libraries(${project_name} PRIVATE yaml-cpp::yaml-cpp)

# copy dll files to executable directory
#   check this linkage for reference https://github.com/libsdl-org/SDL/issues/6399
if (WIN32)
    add_custom_command(
        TARGET ${project_name} POST_BUILD
        COMMAND "${CMAKE_COMMAND}" -E copy_if_different "$<TARGET_FILE:SDL2::SDL2>" "$<TARGET_FILE_DIR:${project_name}>"
        VERBATIM
    )
endif()

# copy resource to bindir
add_custom_command (
    TARGET ${project_name} POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_CURRENT_SOURCE_DIR}/RcNodeEditor/resource $<TARGET_FILE_DIR:${project_name}>/resource
    COMMAND_EXPAND_LISTS
)
message("cmakebindir = ${CMAKE_CURRENT_BINARY_DIR}")
# intall bin
set(INSTALL_PREFIX "${CMAKE_CURRENT_SOURCE_DIR}/install" CACHE PATH "intallation root")
install(TARGETS ${PROJECT_NAME} DESTINATION "${INSTALL_PREFIX}/bin")
# this may automatically copy dependencies dll files to installation directory
install(FILES $<TARGET_RUNTIME_DLLS:${PROJECT_NAME}> DESTINATION "${INSTALL_PREFIX}/bin")
